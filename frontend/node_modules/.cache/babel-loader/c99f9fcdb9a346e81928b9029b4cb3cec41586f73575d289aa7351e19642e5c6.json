{"ast":null,"code":"import axios from 'axios';\nimport { CustomError } from \"../../utils/errors\";\nconst getClasses = async (baseURL, token, classroom_name) => {\n  console.log(\"in get classes\");\n  console.log(classroom_name);\n  if (classroom_name) {\n    try {\n      const response = await axios.get(`${baseURL}/findclasses`, {\n        params: {\n          classroom_name: classroom_name\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n      const data = response.data;\n      return data.classes;\n    } catch (error) {\n      console.error('Error fetching classes:', error);\n      throw new CustomError(`Getting classes failed: ${error.message}`);\n    }\n  }\n};\nconst deleteClass = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deleteclass`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      data: {\n        class_id: class_id\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error deleting class:', error);\n    throw new CustomError(`Deleting class failed: ${error.message}`);\n  }\n};\nconst createClass = async (baseURL, token, classroom_name, name) => {\n  try {\n    const response = await axios.post(`${baseURL}/addclass`, {\n      classroom_name: classroom_name,\n      name: name\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error creating class:', error);\n    throw new CustomError(`Creating class failed: ${error.message}`);\n  }\n};\nconst setSharedClass = async (baseURL, token, classroom_name, class_id) => {\n  try {\n    const response = await axios.put(`${baseURL}/setsharedclass`, {\n      classroom_name: classroom_name,\n      class_id: class_id\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error setting shared class:', error);\n    throw new CustomError(`Setting shared class failed: ${error.message}`);\n  }\n};\nconst getSharedClass = async (baseURL, token, classroom_name) => {\n  try {\n    const response = await axios.get(`${baseURL}/getsharedclass`, {\n      params: {\n        classroom_name: classroom_name\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    const data = response.data;\n    return data.shared_id;\n  } catch (error) {\n    console.error('Error fetching shared class:', error);\n    throw new CustomError(`Fetching shared class failed: ${error.message}`);\n  }\n};\nconst getClass = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.get(`${baseURL}/findclass`, {\n      params: {\n        class_id: class_id\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = response.data;\n    if (!response.status === 200) {\n      throw new CustomError(`${data.message}`, response.status);\n    }\n    return data.class;\n  } catch (error) {\n    console.error('Error fetching class:', error);\n    throw new CustomError(`Fetching class failed: ${error.message}`);\n  }\n};\nexport { getClasses, deleteClass, createClass, getSharedClass, setSharedClass, getClass };","map":{"version":3,"names":["axios","CustomError","getClasses","baseURL","token","classroom_name","console","log","response","get","params","headers","status","data","classes","error","message","deleteClass","class_id","delete","createClass","name","post","setSharedClass","put","getSharedClass","shared_id","getClass","class"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/services/admin/class.js"],"sourcesContent":["import axios from 'axios';\nimport { CustomError } from \"../../utils/errors\";\n\n\nconst getClasses = async (baseURL, token, classroom_name) => {\n  console.log (\"in get classes\")\n  console.log(classroom_name);\n    if (classroom_name) {\n      try {\n        const response = await axios.get(`${baseURL}/findclasses`, {\n          params: {\n            classroom_name: classroom_name,\n          },\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n    \n        if (!response.status === 200) {\n          throw new CustomError(`HTTP error! Status: ${response.status}`);\n        }\n    \n        const data = response.data;\n        return data.classes;\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n        throw new CustomError(`Getting classes failed: ${error.message}`);\n      }\n    }\n\n  };\n  \n  const deleteClass = async (baseURL, token, class_id) => {\n    try {\n      const response = await axios.delete(`${baseURL}/deleteclass`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        data: {\n          class_id: class_id,\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error deleting class:', error);\n      throw new CustomError(`Deleting class failed: ${error.message}`);\n    }\n  };\n  \n  const createClass = async (baseURL, token, classroom_name, name) => {\n    try {\n      const response = await axios.post(`${baseURL}/addclass`, {\n        classroom_name: classroom_name,\n        name: name,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error creating class:', error);\n      throw new CustomError(`Creating class failed: ${error.message}`);\n    }\n  };\n  \n  const setSharedClass = async (baseURL, token, classroom_name, class_id) => {\n    try {\n      const response = await axios.put(`${baseURL}/setsharedclass`, {\n        classroom_name: classroom_name,\n        class_id: class_id,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error setting shared class:', error);\n      throw new CustomError(`Setting shared class failed: ${error.message}`);\n    }\n  };\n  \n  const getSharedClass = async (baseURL, token, classroom_name) => {\n    try {\n      const response = await axios.get(`${baseURL}/getsharedclass`, {\n        params: {\n          classroom_name: classroom_name,\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const data = response.data;\n      return data.shared_id;\n    } catch (error) {\n      console.error('Error fetching shared class:', error);\n      throw new CustomError(`Fetching shared class failed: ${error.message}`);\n    }\n  };\n  \n  const getClass = async (baseURL, token, class_id) => {\n    try {\n      const response = await axios.get(`${baseURL}/findclass`, {\n        params: {\n          class_id: class_id,\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n  \n      const data = response.data;\n  \n      if (!response.status === 200) {\n        throw new CustomError(`${data.message}`, response.status);\n      }\n  \n      return data.class;\n    } catch (error) {\n      console.error('Error fetching class:', error);\n      throw new CustomError(`Fetching class failed: ${error.message}`);\n    }\n  };\n\n\nexport {getClasses, deleteClass, createClass, getSharedClass, setSharedClass, getClass};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}