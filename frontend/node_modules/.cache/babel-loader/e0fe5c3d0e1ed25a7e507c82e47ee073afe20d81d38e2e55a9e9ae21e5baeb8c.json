{"ast":null,"code":"import axios from 'axios';\nimport { CustomError } from '../../utils/errors';\nconst login = async (loginName, password, BASE_URL) => {\n  try {\n    const {\n      data,\n      status\n    } = await axios.post(`${BASE_URL}/login`, {\n      loginName,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (status !== 200) {\n      const errorMessage = data.message && (Array.isArray(data.message) ? data.message[0].msg : data.message) || 'Request failed';\n      throw new CustomError(errorMessage, status);\n    }\n    const localStorageItems = {\n      token: data.token,\n      userId: data.userId,\n      username: data.username,\n      admin: data.admin\n    };\n    for (const [key, value] of Object.entries(localStorageItems)) {\n      localStorage.setItem(key, value);\n    }\n  } catch (error) {\n    throw new CustomError(`${error.message}`);\n  }\n};\nconst signup = async (username, email, password, BASE_URL) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/signup`, {\n      username,\n      email,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = response.data;\n    if (!response.status === 200) {\n      let errorMessage = 'Request failed';\n      if (data.message) {\n        if (Array.isArray(data.message) && data.message.length > 0) {\n          errorMessage = data.message[0].msg;\n        } else {\n          errorMessage = data.message;\n        }\n      }\n      throw new CustomError(errorMessage, response.status);\n    }\n    return data.message;\n  } catch (error) {\n    throw new CustomError(`${error.message}`);\n  }\n};\nconst deleteUser = async (baseURL, token, username) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deleteuser?username=${username}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (response.status !== 204) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (err) {\n    throw new CustomError(`${err.message}`);\n  }\n};\nexport { deleteUser, signup, login };","map":{"version":3,"names":["axios","CustomError","login","loginName","password","BASE_URL","data","status","post","headers","errorMessage","message","Array","isArray","msg","localStorageItems","token","userId","username","admin","key","value","Object","entries","localStorage","setItem","error","signup","email","response","length","deleteUser","baseURL","delete","err"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/services/user/admin.js"],"sourcesContent":["import axios from 'axios';\nimport { CustomError } from '../../utils/errors';\n\n\nconst login = async (loginName, password, BASE_URL) => {\n  try {\n    const { data, status } = await axios.post(`${BASE_URL}/login`, { loginName, password }, {\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    if (status !== 200) {\n      const errorMessage = data.message && (Array.isArray(data.message) ? data.message[0].msg : data.message) || 'Request failed';\n      throw new CustomError(errorMessage, status);\n    }\n\n    const localStorageItems = {\n      token: data.token,\n      userId: data.userId,\n      username: data.username,\n      admin: data.admin,\n    };\n\n    for (const [key, value] of Object.entries(localStorageItems)) {\n      localStorage.setItem(key, value);\n    }\n\n  } catch (error) {\n    throw new CustomError(`${error.message}`);\n  }\n};\n\n\nconst signup = async (username, email, password, BASE_URL) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/signup`, { username, email, password }, {\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    const data = response.data;\n\n    if (!response.status === 200) {\n      let errorMessage = 'Request failed';\n\n      if (data.message) {\n        if (Array.isArray(data.message) && data.message.length > 0) {\n          errorMessage = data.message[0].msg;\n        } else {\n          errorMessage = data.message;\n        }\n      }\n\n      throw new CustomError(errorMessage, response.status);\n    }\n\n    return data.message;\n\n  } catch (error) {\n    throw new CustomError(`${error.message}`);\n  }\n};\n\n\nconst deleteUser = async (baseURL, token, username) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deleteuser?username=${username}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (response.status !== 204) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n\n    return;\n\n  } catch (err) {\n    throw new CustomError(`${err.message}`);\n  }\n};\n\nexport { deleteUser, signup, login };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}