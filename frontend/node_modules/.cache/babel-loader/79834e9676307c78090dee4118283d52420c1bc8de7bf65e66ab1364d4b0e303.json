{"ast":null,"code":"import axios from 'axios';\nimport { CustomError } from \"../../utils/errors\";\nconst getClasses = async (baseURL, token, classroom_name) => {\n  if (classroom_name !== \"\") {}\n};\nconst deleteClass = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deleteclass`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      data: {\n        class_id: class_id\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error deleting class:', error);\n    throw new CustomError(`Deleting class failed: ${error.message}`);\n  }\n};\nconst createClass = async (baseURL, token, classroom_name, name) => {\n  try {\n    const response = await axios.post(`${baseURL}/addclass`, {\n      classroom_name: classroom_name,\n      name: name\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error creating class:', error);\n    throw new CustomError(`Creating class failed: ${error.message}`);\n  }\n};\nconst setSharedClass = async (baseURL, token, classroom_name, class_id) => {\n  try {\n    const response = await axios.put(`${baseURL}/setsharedclass`, {\n      classroom_name: classroom_name,\n      class_id: class_id\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error setting shared class:', error);\n    throw new CustomError(`Setting shared class failed: ${error.message}`);\n  }\n};\nconst getSharedClass = async (baseURL, token, classroom_name) => {\n  try {\n    const response = await axios.get(`${baseURL}/getsharedclass`, {\n      params: {\n        classroom_name: classroom_name\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    const data = response.data;\n    return data.shared_id;\n  } catch (error) {\n    console.error('Error fetching shared class:', error);\n    throw new CustomError(`Fetching shared class failed: ${error.message}`);\n  }\n};\nconst getClass = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.get(`${baseURL}/findclass`, {\n      params: {\n        class_id: class_id\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = response.data;\n    if (!response.status === 200) {\n      throw new CustomError(`${data.message}`, response.status);\n    }\n    return data.class;\n  } catch (error) {\n    console.error('Error fetching class:', error);\n    throw new CustomError(`Fetching class failed: ${error.message}`);\n  }\n};\nexport { getClasses, deleteClass, createClass, getSharedClass, setSharedClass, getClass };","map":{"version":3,"names":["axios","CustomError","getClasses","baseURL","token","classroom_name","deleteClass","class_id","response","delete","headers","data","status","error","console","message","createClass","name","post","setSharedClass","put","getSharedClass","get","params","shared_id","getClass","class"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/services/admin/class.js"],"sourcesContent":["import axios from 'axios';\nimport { CustomError } from \"../../utils/errors\";\n\n\nconst getClasses = async (baseURL, token, classroom_name) => {\n    if (classroom_name !== \"\") {\n\n    }\n\n  };\n  \n  const deleteClass = async (baseURL, token, class_id) => {\n    try {\n      const response = await axios.delete(`${baseURL}/deleteclass`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        data: {\n          class_id: class_id,\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error deleting class:', error);\n      throw new CustomError(`Deleting class failed: ${error.message}`);\n    }\n  };\n  \n  const createClass = async (baseURL, token, classroom_name, name) => {\n    try {\n      const response = await axios.post(`${baseURL}/addclass`, {\n        classroom_name: classroom_name,\n        name: name,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error creating class:', error);\n      throw new CustomError(`Creating class failed: ${error.message}`);\n    }\n  };\n  \n  const setSharedClass = async (baseURL, token, classroom_name, class_id) => {\n    try {\n      const response = await axios.put(`${baseURL}/setsharedclass`, {\n        classroom_name: classroom_name,\n        class_id: class_id,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      return;\n    } catch (error) {\n      console.error('Error setting shared class:', error);\n      throw new CustomError(`Setting shared class failed: ${error.message}`);\n    }\n  };\n  \n  const getSharedClass = async (baseURL, token, classroom_name) => {\n    try {\n      const response = await axios.get(`${baseURL}/getsharedclass`, {\n        params: {\n          classroom_name: classroom_name,\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n  \n      if (!response.status === 200) {\n        throw new CustomError(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const data = response.data;\n      return data.shared_id;\n    } catch (error) {\n      console.error('Error fetching shared class:', error);\n      throw new CustomError(`Fetching shared class failed: ${error.message}`);\n    }\n  };\n  \n  const getClass = async (baseURL, token, class_id) => {\n    try {\n      const response = await axios.get(`${baseURL}/findclass`, {\n        params: {\n          class_id: class_id,\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n  \n      const data = response.data;\n  \n      if (!response.status === 200) {\n        throw new CustomError(`${data.message}`, response.status);\n      }\n  \n      return data.class;\n    } catch (error) {\n      console.error('Error fetching class:', error);\n      throw new CustomError(`Fetching class failed: ${error.message}`);\n    }\n  };\n\n\nexport {getClasses, deleteClass, createClass, getSharedClass, setSharedClass, getClass};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}