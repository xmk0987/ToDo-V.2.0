{"ast":null,"code":"var _jsxFileName = \"/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/components/todo/SingleStudProgTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useBaseUrl } from \"../../utils/baseUrlContext\";\nimport { makeLinksClickable } from \"../../utils/helperFunctions\";\nimport { getAnswer } from \"../../services/answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleTodoProgress = ({\n  todo\n}) => {\n  _s();\n  const [studentAnswer, setStudentAnswer] = useState(null);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [isAnswer, setIsAnswer] = useState(false);\n  const baseURL = useBaseUrl();\n  useEffect(() => {\n    const fetchStudentAnswers = async () => {\n      const newStudentAnswer = await getStudentAnswer(baseURL, todo.todo_id, todo.student_username);\n      if (newStudentAnswer.student_answer) {\n        setStudentAnswer(newStudentAnswer.student_answer);\n      }\n    };\n    const fetchAnswers = async () => {\n      const isAnswer = await getAnswer(baseURL, todo.todo_id);\n      if (isAnswer.answer) {\n        setIsAnswer(true);\n      }\n    };\n    fetchAnswers();\n    fetchStudentAnswers();\n  }, [baseURL, todo.student_username, todo.todo_id]);\n  const toggleShowAnswer = () => {\n    setShowAnswer(!showAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `single-todo-container ${todo.completed ? 'make-green' : studentAnswer ? 'make-yellow' : 'make-red'}`,\n    children: [!showAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `todo-content`,\n      dangerouslySetInnerHTML: {\n        __html: makeLinksClickable(todo.content)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `todo-content`,\n      children: studentAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), isAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"help-circle-outline\",\n        onClick: toggleShowAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(SingleTodoProgress, \"P74lMMBMOsV0ReSR0VfpGm7b6Rw=\", false, function () {\n  return [useBaseUrl];\n});\n_c = SingleTodoProgress;\nexport default SingleTodoProgress;\nvar _c;\n$RefreshReg$(_c, \"SingleTodoProgress\");","map":{"version":3,"names":["React","useEffect","useState","useBaseUrl","makeLinksClickable","getAnswer","jsxDEV","_jsxDEV","SingleTodoProgress","todo","_s","studentAnswer","setStudentAnswer","showAnswer","setShowAnswer","isAnswer","setIsAnswer","baseURL","fetchStudentAnswers","newStudentAnswer","getStudentAnswer","todo_id","student_username","student_answer","fetchAnswers","answer","toggleShowAnswer","className","completed","children","dangerouslySetInnerHTML","__html","content","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/components/todo/SingleStudProgTodo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useBaseUrl } from \"../../utils/baseUrlContext\";\nimport { makeLinksClickable } from \"../../utils/helperFunctions\";\nimport { getAnswer } from \"../../services/answers\";\n\nconst SingleTodoProgress = ({todo}) => {\n    const [studentAnswer, setStudentAnswer] = useState(null);\n    const [showAnswer, setShowAnswer] = useState(false);\n    const [isAnswer, setIsAnswer] = useState(false);\n\n    const baseURL = useBaseUrl();\n\n    useEffect(() => {\n        const fetchStudentAnswers = async () =>{\n            const newStudentAnswer = await getStudentAnswer(baseURL, todo.todo_id, todo.student_username);\n            if(newStudentAnswer.student_answer) {\n                setStudentAnswer(newStudentAnswer.student_answer);\n            }         \n        }\n\n        const fetchAnswers = async () => {\n            const isAnswer = await getAnswer(baseURL, todo.todo_id);\n            if (isAnswer.answer) {\n                setIsAnswer(true);\n            }\n        }\n\n        fetchAnswers();\n        fetchStudentAnswers();\n    },[baseURL, todo.student_username, todo.todo_id]);\n\n    const toggleShowAnswer = () => {\n        setShowAnswer(!showAnswer);\n    }\n\n    return (\n        <div className={`single-todo-container ${todo.completed ? 'make-green' : studentAnswer ? 'make-yellow' : 'make-red'}`}>\n            {!showAnswer ? (\n                 <p\n                 className={`todo-content`}\n                 dangerouslySetInnerHTML={{ __html: makeLinksClickable(todo.content) }}\n                />\n            ) :(\n                <p\n                className={`todo-content`}>\n                    {studentAnswer}\n                </p>\n            )}\n            {isAnswer ? (\n                <div>\n                    <ion-icon name=\"help-circle-outline\" onClick={toggleShowAnswer}></ion-icon>\n                </div>\n                ) : null }\n        </div>\n    )\n\n}\n\nexport default SingleTodoProgress;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,OAAO,GAAGd,UAAU,CAAC,CAAC;EAE5BF,SAAS,CAAC,MAAM;IACZ,MAAMiB,mBAAmB,GAAG,MAAAA,CAAA,KAAW;MACnC,MAAMC,gBAAgB,GAAG,MAAMC,gBAAgB,CAACH,OAAO,EAAER,IAAI,CAACY,OAAO,EAAEZ,IAAI,CAACa,gBAAgB,CAAC;MAC7F,IAAGH,gBAAgB,CAACI,cAAc,EAAE;QAChCX,gBAAgB,CAACO,gBAAgB,CAACI,cAAc,CAAC;MACrD;IACJ,CAAC;IAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMT,QAAQ,GAAG,MAAMV,SAAS,CAACY,OAAO,EAAER,IAAI,CAACY,OAAO,CAAC;MACvD,IAAIN,QAAQ,CAACU,MAAM,EAAE;QACjBT,WAAW,CAAC,IAAI,CAAC;MACrB;IACJ,CAAC;IAEDQ,YAAY,CAAC,CAAC;IACdN,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAC,CAACD,OAAO,EAAER,IAAI,CAACa,gBAAgB,EAAEb,IAAI,CAACY,OAAO,CAAC,CAAC;EAEjD,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC3BZ,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIN,OAAA;IAAKoB,SAAS,EAAG,yBAAwBlB,IAAI,CAACmB,SAAS,GAAG,YAAY,GAAGjB,aAAa,GAAG,aAAa,GAAG,UAAW,EAAE;IAAAkB,QAAA,GACjH,CAAChB,UAAU,gBACPN,OAAA;MACAoB,SAAS,EAAG,cAAc;MAC1BG,uBAAuB,EAAE;QAAEC,MAAM,EAAE3B,kBAAkB,CAACK,IAAI,CAACuB,OAAO;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,gBAEF7B,OAAA;MACAoB,SAAS,EAAG,cAAc;MAAAE,QAAA,EACrBlB;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CACN,EACArB,QAAQ,gBACLR,OAAA;MAAAsB,QAAA,eACItB,OAAA;QAAU8B,IAAI,EAAC,qBAAqB;QAACC,OAAO,EAAEZ;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,GACF,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAGd,CAAC;AAAA1B,EAAA,CAnDKF,kBAAkB;EAAA,QAKJL,UAAU;AAAA;AAAAoC,EAAA,GALxB/B,kBAAkB;AAqDxB,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}