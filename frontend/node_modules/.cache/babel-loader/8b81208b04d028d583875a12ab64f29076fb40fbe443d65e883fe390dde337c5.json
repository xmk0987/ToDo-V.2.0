{"ast":null,"code":"class CustomError extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.name = 'CustomError';\n    this.statusCode = statusCode || 500;\n  }\n}\nconst handleResponse = async (response, context = \"notlogin\") => {\n  const data = await response.json();\n  if (!response.ok) {\n    let errorMessage = 'Request failed';\n    if (data.message) {\n      if (Array.isArray(data.message) && data.message.length > 0) {\n        errorMessage = data.message[0].msg;\n      } else {\n        errorMessage = data.message;\n      }\n    }\n    throw new CustomError(errorMessage, response.status);\n  }\n\n  // Check the context to determine whether it's a login response\n  if (context === 'login') {\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"userId\", data.userId);\n    localStorage.setItem(\"username\", data.username);\n    localStorage.setItem(\"admin\", data.admin);\n  }\n  return data.message;\n};\nmodule.exports = {\n  CustomError,\n  handleResponse\n};","map":{"version":3,"names":["CustomError","Error","constructor","message","statusCode","name","handleResponse","response","context","data","json","ok","errorMessage","Array","isArray","length","msg","status","localStorage","setItem","token","userId","username","admin","module","exports"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/utils/errors.js"],"sourcesContent":["class CustomError extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.name = 'CustomError';\n    this.statusCode = statusCode || 500;\n  }\n}\n\nconst handleResponse = async (response, context=\"notlogin\") => {\n  const data = await response.json();\n\n  if (!response.ok) {\n    let errorMessage = 'Request failed';\n\n    if (data.message) {\n      if (Array.isArray(data.message) && data.message.length > 0) {\n        errorMessage = data.message[0].msg;\n      } else {\n        errorMessage = data.message;\n      }\n    }\n    throw new CustomError(errorMessage, response.status);\n  }\n\n  // Check the context to determine whether it's a login response\n  if (context === 'login') {\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"userId\", data.userId);\n    localStorage.setItem(\"username\", data.username);\n    localStorage.setItem(\"admin\", data.admin);\n  }\n\n  return data.message;\n};\n\nmodule.exports = { CustomError, handleResponse };\n"],"mappings":"AAAA,MAAMA,WAAW,SAASC,KAAK,CAAC;EAC9BC,WAAWA,CAACC,OAAO,EAAEC,UAAU,EAAE;IAC/B,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACE,IAAI,GAAG,aAAa;IACzB,IAAI,CAACD,UAAU,GAAGA,UAAU,IAAI,GAAG;EACrC;AACF;AAEA,MAAME,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAC,UAAU,KAAK;EAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;IAChB,IAAIC,YAAY,GAAG,gBAAgB;IAEnC,IAAIH,IAAI,CAACN,OAAO,EAAE;MAChB,IAAIU,KAAK,CAACC,OAAO,CAACL,IAAI,CAACN,OAAO,CAAC,IAAIM,IAAI,CAACN,OAAO,CAACY,MAAM,GAAG,CAAC,EAAE;QAC1DH,YAAY,GAAGH,IAAI,CAACN,OAAO,CAAC,CAAC,CAAC,CAACa,GAAG;MACpC,CAAC,MAAM;QACLJ,YAAY,GAAGH,IAAI,CAACN,OAAO;MAC7B;IACF;IACA,MAAM,IAAIH,WAAW,CAACY,YAAY,EAAEL,QAAQ,CAACU,MAAM,CAAC;EACtD;;EAEA;EACA,IAAIT,OAAO,KAAK,OAAO,EAAE;IACvBU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,IAAI,CAACW,KAAK,CAAC;IACzCF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEV,IAAI,CAACY,MAAM,CAAC;IAC3CH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEV,IAAI,CAACa,QAAQ,CAAC;IAC/CJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,IAAI,CAACc,KAAK,CAAC;EAC3C;EAEA,OAAOd,IAAI,CAACN,OAAO;AACrB,CAAC;AAEDqB,MAAM,CAACC,OAAO,GAAG;EAAEzB,WAAW;EAAEM;AAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}