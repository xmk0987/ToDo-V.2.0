{"ast":null,"code":"var _jsxFileName = \"/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/components/todo/StudentProgressCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useBaseUrl } from \"../../utils/providers/urlprovider\";\nimport { getStudentTodos } from \"../../services/student/student\";\nimport SingleTodoProgress from \"./SingleStudProgTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentProgressCard = ({\n  student,\n  sharedClass\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const baseURL = useBaseUrl();\n  const token = window.localStorage.getItem(\"token\");\n  const getAllTodos = useCallback(async () => {\n    try {\n      const result = await getStudentTodos(baseURL, token, sharedClass.class_id, student.username);\n      setTodos(result);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  }, [baseURL, token, sharedClass.class_id, student.username]);\n  useEffect(() => {\n    const fetchClasses = async () => {\n      await getAllTodos();\n    };\n    fetchClasses();\n    const updateEventListener = () => {\n      getAllTodos();\n    };\n    window.addEventListener(\"updateEvent\", updateEventListener);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener(\"updateEvent\", updateEventListener);\n    };\n  }, [getAllTodos]);\n  const sortedTodos = [...todos].sort((a, b) => a.position - b.position);\n  const areAllTodosCompleted = () => {\n    return todos.every(todo => todo.completed);\n  };\n  const checkForEmpty = () => {\n    if (todos.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-card full-container ${checkForEmpty() ? 'secondary-color' : areAllTodosCompleted() ? 'make-green' : 'make-red'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"second-header\",\n        children: student.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body scroll\",\n      children: todos && sortedTodos.map(todo => /*#__PURE__*/_jsxDEV(SingleTodoProgress, {\n        todo: todo\n      }, todo.student_todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-options\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"second-header flex-center\",\n        children: checkForEmpty() ? 'Nothing ToDo' : areAllTodosCompleted() ? 'Done' : 'Not done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentProgressCard, \"18HeFW9y1dJLYSBYp84AfZrkEww=\", false, function () {\n  return [useBaseUrl];\n});\n_c = StudentProgressCard;\nexport default StudentProgressCard;\nvar _c;\n$RefreshReg$(_c, \"StudentProgressCard\");","map":{"version":3,"names":["useState","useCallback","useEffect","useBaseUrl","getStudentTodos","SingleTodoProgress","jsxDEV","_jsxDEV","StudentProgressCard","student","sharedClass","_s","todos","setTodos","baseURL","token","window","localStorage","getItem","getAllTodos","result","class_id","username","error","console","fetchClasses","updateEventListener","addEventListener","removeEventListener","sortedTodos","sort","a","b","position","areAllTodosCompleted","every","todo","completed","checkForEmpty","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student_todo_id","_c","$RefreshReg$"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/components/todo/StudentProgressCard.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { useBaseUrl } from \"../../utils/providers/urlprovider\";\n\nimport { getStudentTodos } from \"../../services/student/student\";\n\nimport SingleTodoProgress from \"./SingleStudProgTodo\";\n\nconst StudentProgressCard = ({student, sharedClass}) => {\n    const [todos, setTodos] = useState([]);    \n\n    const baseURL = useBaseUrl();\n    const token = window.localStorage.getItem(\"token\");\n\n    const getAllTodos = useCallback(async () => {\n        try {\n          const result = await getStudentTodos(baseURL, token, sharedClass.class_id, student.username);\n          setTodos(result);\n        } catch (error) {\n          console.error('Error fetching todos:', error);\n        }\n      }, [baseURL, token, sharedClass.class_id, student.username]);\n    \n\n    useEffect(() => {\n        const fetchClasses = async () => {\n            await getAllTodos();\n        };\n\n        fetchClasses();\n        const updateEventListener = () => {\n            getAllTodos();\n          };\n      \n        window.addEventListener(\"updateEvent\", updateEventListener);\n    \n        // Remove the event listener when the component unmounts\n        return () => {\n        window.removeEventListener(\"updateEvent\", updateEventListener);\n        };\n    }, [getAllTodos]);\n\n    \n\n    const sortedTodos = [...todos].sort((a, b) => a.position - b.position);\n\n    const areAllTodosCompleted = () => {\n        return todos.every(todo => todo.completed);\n    }\n\n    const checkForEmpty = () => {\n        if (todos.length === 0) {\n            return true;\n        } else  {\n            return false;\n        }\n    }\n\n    return (\n        <div className={`todo-card full-container ${checkForEmpty() ? ('secondary-color') : areAllTodosCompleted() ? 'make-green' : 'make-red'}`}>\n            <div className=\"card-header\">\n                <h2 className=\"second-header\">{student.username}</h2>\n            </div>\n            <div className=\"card-body scroll\">\n                {todos && sortedTodos.map((todo) => (\n                     <SingleTodoProgress key={todo.student_todo_id} todo={todo}/>\n                ))}\n            </div>\n            <div className=\"card-options\">\n                <p className=\"second-header flex-center\">\n                    {checkForEmpty() ? ('Nothing ToDo') : areAllTodosCompleted() ? 'Done' : 'Not done'}\n                </p>\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default StudentProgressCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}