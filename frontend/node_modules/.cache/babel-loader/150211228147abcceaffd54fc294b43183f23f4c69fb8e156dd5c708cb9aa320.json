{"ast":null,"code":"import axios from 'axios';\nimport { CustomError } from '../../utils/errors';\nconst getTodos = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.get(`${baseURL}/gettodos`, {\n      params: {\n        class_id: class_id\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = response.data;\n    if (!response.status === 200) {\n      throw new CustomError(`${data.message}`, response.status);\n    }\n    return data.todos;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw new CustomError(`Getting todos failed: ${error.message}`);\n  }\n};\nconst updateTodo = async (baseURL, token, todo_id, updates) => {\n  try {\n    const response = await axios.put(`${baseURL}/updatetodo`, {\n      todo_id: todo_id,\n      updates: updates\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    const data = response.data;\n    return data.todos;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw new CustomError(`Getting todos failed: ${error.message}`);\n  }\n};\nconst updateTodoFlag = async (baseURL, token, todo_id, flagged) => {\n  try {\n    const updates = {\n      flagged: flagged\n    };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo flag:', err);\n    throw new CustomError(`Updating todo flag failed: ${err.message}`);\n  }\n};\nconst updateTodoComplete = async (baseURL, token, todo_id, completed) => {\n  try {\n    const updates = {\n      completed: completed\n    };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo completion status:', err);\n    throw new CustomError(`Updating todo completion status failed: ${err.message}`);\n  }\n};\nconst updateTodoContent = async (baseURL, token, todo_id, content) => {\n  try {\n    const updates = {\n      content: content\n    };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo content:', err);\n    throw new CustomError(`Updating todo content status failed: ${err.message}`);\n  }\n};\nconst deleteTodo = async (baseURL, token, todo_id) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deletetodo`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      params: {\n        todo_id: todo_id\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error deleting todo:', error);\n    throw new CustomError(`Deleting todo failed: ${error.message}`);\n  }\n};\nconst addTodo = async (baseURL, token, class_id, content) => {\n  try {\n    const response = await axios.post(`${baseURL}/addtodo`, {\n      class_id: class_id,\n      content: content\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error adding todo: ', error);\n    throw new CustomError(`Adding todo failed: ${error.message}`);\n  }\n};\nconst updatePosition = async (baseURL, token, todo, todo2) => {\n  console.log(\"lähtee\");\n  try {\n    const response = await axios.put(`${baseURL}/swapposition`, {\n      todo: todo,\n      todo2: todo2\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.status === 201) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n    return;\n  } catch (error) {\n    console.error('Error swapping todo: ', error);\n    throw new CustomError(`Swapping todo failed: ${error.message}`);\n  }\n};\nexport { getTodos, updateTodo, updateTodoComplete, updateTodoFlag, updateTodoContent, deleteTodo, addTodo, updatePosition };","map":{"version":3,"names":["axios","CustomError","getTodos","baseURL","token","class_id","response","get","params","headers","data","status","message","todos","error","console","updateTodo","todo_id","updates","put","updateTodoFlag","flagged","err","updateTodoComplete","completed","updateTodoContent","content","deleteTodo","delete","addTodo","post","updatePosition","todo","todo2","log"],"sources":["/Users/onnivitikainen/Desktop/online-todolist-v2/frontend/src/services/admin/todos.js"],"sourcesContent":["import axios from 'axios';\nimport { CustomError } from '../../utils/errors';\n\nconst getTodos = async (baseURL, token, class_id) => {\n  try {\n    const response = await axios.get(`${baseURL}/gettodos`, {\n      params: {\n        class_id: class_id,\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    const data = response.data;\n\n    if (!response.status === 200) {\n      throw new CustomError(`${data.message}`, response.status);\n    }\n\n    return data.todos;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw new CustomError(`Getting todos failed: ${error.message}`);\n  }\n};\n\nconst updateTodo = async (baseURL, token, todo_id, updates) => {\n  try {\n    const response = await axios.put(`${baseURL}/updatetodo`, {\n      todo_id: todo_id,\n      updates: updates,\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = response.data;\n    return data.todos;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw new CustomError(`Getting todos failed: ${error.message}`);\n  }\n};\n\nconst updateTodoFlag = async (baseURL, token, todo_id, flagged) => {\n  try {\n    const updates = { flagged: flagged };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo flag:', err);\n    throw new CustomError(`Updating todo flag failed: ${err.message}`);\n  }\n};\n\nconst updateTodoComplete = async (baseURL, token, todo_id, completed) => {\n  try {\n    const updates = { completed: completed };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo completion status:', err);\n    throw new CustomError(`Updating todo completion status failed: ${err.message}`);\n  }\n};\n\nconst updateTodoContent = async (baseURL, token, todo_id, content) => {\n  try {\n    const updates = { content: content };\n    return await updateTodo(baseURL, token, todo_id, updates);\n  } catch (err) {\n    console.error('Error updating todo content:', err);\n    throw new CustomError(`Updating todo content status failed: ${err.message}`);\n  }\n};\n\nconst deleteTodo = async (baseURL, token, todo_id) => {\n  try {\n    const response = await axios.delete(`${baseURL}/deletetodo`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n      params: {\n        todo_id: todo_id,\n      },\n    });\n\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n\n    return;\n\n  } catch (error) {\n    console.error('Error deleting todo:', error);\n    throw new CustomError(`Deleting todo failed: ${error.message}`);\n  }\n};\n\nconst addTodo = async (baseURL, token, class_id, content) => {\n  try {\n    const response = await axios.post(`${baseURL}/addtodo`, {\n      class_id: class_id,\n      content: content,\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.status === 200) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n\n    return;\n\n  } catch (error) {\n    console.error('Error adding todo: ', error);\n    throw new CustomError(`Adding todo failed: ${error.message}`)\n  }\n}\n\nconst updatePosition = async (baseURL, token, todo, todo2) => {\n  console.log(\"lähtee\");\n  try {\n    const response = await axios.put(`${baseURL}/swapposition`, {\n      todo: todo,\n      todo2: todo2,\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.status === 201) {\n      throw new CustomError(`HTTP error! Status: ${response.status}`);\n    }\n\n    return;\n\n  } catch (error) {\n    console.error('Error swapping todo: ', error);\n    throw new CustomError(`Swapping todo failed: ${error.message}`)\n  }\n}\n\nexport { getTodos, updateTodo, updateTodoComplete, \n        updateTodoFlag, updateTodoContent, deleteTodo, \n        addTodo, updatePosition};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}